<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.phoenix.videoplayer">

    <uses-permission android:name="android.permission.INTERNET"/>

    <application android:allowBackup="true" android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name" android:supportsRtl="true" android:theme="@style/AppTheme">

        <!--
        android:hardwareAccelerated="true"      硬件加速
        android:screenOrientation="landscape"   强制横屏
        android:windowSoftInputMode             activity主窗口与软键盘的交互模式，可以用来避免输入法面板遮挡问题，Android1.5后的一个新特性。
            这个属性能影响两件事情：
            【一】当有焦点产生时，软键盘是隐藏还是显示
            【二】是否减少活动主窗口大小以便腾出空间放软键盘
            各值的含义：
            【A】stateUnspecified：软键盘的状态并没有指定，系统将选择一个合适的状态或依赖于主题的设置
            【B】stateUnchanged：当这个activity出现时，软键盘将一直保持在上一个activity里的状态，无论是隐藏还是显示
            【C】stateHidden：用户选择activity时，软键盘总是被隐藏
            【D】stateAlwaysHidden：当该Activity主窗口获取焦点时，软键盘也总是被隐藏的
            【E】stateVisible：软键盘通常是可见的
            【F】stateAlwaysVisible：用户选择activity时，软键盘总是显示的状态
            【G】adjustUnspecified：默认设置，通常由系统自行决定是隐藏还是显示
            【H】adjustResize：该Activity总是调整屏幕的大小以便留出软键盘的空间
            【I】adjustPan：当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分
        android:configChanges="keyboardHidden|screenSize|orientation"
            配置了这个属性，当我们横竖屏切换的时候会直接调用onCreate方法中的onConfigurationChanged方法，而不会重新执行onCreate方法，那当然如果不配置这个属性的话就会重新调用onCreate方法了
            android:configChanges=["mcc", "mnc", "locale", "touchscreen", "keyboard", "keyboardHidden", "navigation", "screenLayout", "fontScale", "uiMode", "orientation", "screenSize", "smallestScreenSize"]
                mcc:The IMSI mobile country code (MCC) has changed — a SIM has been detected and updated the MCC.
                    IMSI(国际移动用户识别码)发生改变，检测到SIM卡，或者更新MCC
                mnc:The IMSI mobile network code (MNC) has changed — a SIM has been detected and updated the MNC.
                    IMSI网络发生改变,检测到SIM卡，或者更新MCC
                    其中mcc和mnc理论上不可能发生变化
                locale:The locale has changed — the user has selected a new language that text should be displayed in.
                    语言发生改变，用户选择了一个新的语言，文字应该重新显示
                touchscreen:The touchscreen has changed. (This should never normally happen.)
                    触摸屏发生改变，这通常是不应该发生的
                keyboard:The keyboard type has changed — for example, the user has plugged in an external keyboard.
                    键盘类型发生改变，例如，用户使用了外部键盘
                keyboardHidden:The keyboard accessibility has changed — for example, the user has revealed the hardware keyboard.
                    键盘发生改变，例如，用户使用了硬件键盘
                navigation:The navigation type (trackball/dpad) has changed. (This should never normally happen.)
                    导航发生改变，（这通常不应该发生） 举例：连接蓝牙键盘，连接后确实导致了navigation的类型发生变化。因为连接蓝牙键盘后，我可以使用方向键来navigate了
                screenLayout：The screen layout has changed — this might be caused by a different display being activated.
                    屏幕的布局发生改变，这可能导致激活不同的显示
                fontScale：The font scaling factor has changed — the user has selected a new global font size.
                    全局字体大小缩放发生改变
                orientation：The screen orientation has changed — that is, the user has rotated the device.
                    设备旋转，横向显示和竖向显示模式切换。
                screenSize:
                    屏幕大小改变了
                smallestScreenSize:
                    屏幕的物理大小改变了，如：连接到一个外部的屏幕上
                4.2增加了一个layoutDirection属性，当改变语言设置后，该属性也会成newConfig中的一个mask位。所以ActivityManagerService(实际在ActivityStack)在决定是否重启Activity的时候总是判断为重启。
                需要在android:configChanges 中同时添加locale和layoutDirection。
                在不退出应用的情况下切换到Settings里切换语言，发现该Activity还是重启了。
         -->
        <activity android:name=".MainActivity"
            android:hardwareAccelerated="true"
            android:screenOrientation="portrait"
            android:configChanges="keyboardHidden|screenSize|orientation">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>